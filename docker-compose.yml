version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elastic_network

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_SERVICEACCOUNTTOKEN=${KIBANA_SERVICE_TOKEN}
      - XPACK_SECURITY_ENCRYPTIONKEY=a7a99d25df98e0d78c8974d3475164cf
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=a7a99d25df98e0d78c8974d3475164cf
      - NODE_OPTIONS=--openssl-legacy-provider
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elastic_network

  fleet-server:
    image: docker.elastic.co/beats/elastic-agent:${ELASTIC_VERSION}
    environment:
      - FLEET_SERVER_ENABLE=true
      - FLEET_SERVER_ELASTICSEARCH_HOST=http://elasticsearch:9200
      - FLEET_SERVER_SERVICE_TOKEN=${FLEET_SERVICE_TOKEN}
      - FLEET_SERVER_HOST=${FLEET_SERVER_HOST}
      - FLEET_SERVER_POLICY_ID=fleet-server-policy
    ports:
      - "8220:8220"
    depends_on:
      - elasticsearch
    networks:
      - elastic_network

  elastic-agent:
    image: docker.elastic.co/beats/elastic-agent:${ELASTIC_VERSION}
    environment:
      - FLEET_SERVER_HOST=${FLEET_SERVER_HOST}
      - FLEET_ENROLLMENT_TOKEN=${FLEET_ENROLLMENT_TOKEN}
      - FLEET_SERVER=http://fleet-server:8220
    depends_on:
      - fleet-server
    networks:
      - elastic_network

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
    networks:
      - elastic_network

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TOKEN}
    depends_on:
      - nginx-proxy-manager
    networks:
      - elastic_network

networks:
  elastic_network:
    driver: bridge

volumes:
  elasticsearch_data:
  npm_data:
  npm_letsencrypt: 